Window Login_W {
    //Role role := [Role::SYSTEM]

    String text := locate(Login)

    Label Credentiasl_F_login_L {
        String text := ['Login:']
    }
    TextField Credentiasl_F_login {

    }
    Label Credentiasl_F_password_L {
        String text := ['Passw:']
    }
    PasswordField Credentiasl_F_password {

    }

    Button Login_B {
        Boolean booleanVar //we need this variable because methods cannot be assigned directly to attributes or association ends
        String text := ['Log in']
        Employee loggedUser
        event onClick {
            try {
                loggedUser := [Employee.allInstances()->any(c|c.login = $Credentiasl_F_login.text$)]

                if [not($loggedUser$.oclIsUndefined())] {
                    booleanVar := encryptionCheck([$Credentiasl_F_password.text$], [$loggedUser$.password])
                }
            }
            catch (SecurityException) {
                notification(['Security Error'],['you do not hace permission to read the login information'],[-1])
            }
            if [not $booleanVar$.oclIsUndefined() and $booleanVar$] {
                if [$loggedUser$.myRole = Role::SALESPERSON] {
                    open SalesPersonMenu_W(caller:[$loggedUser$], role:[$loggedUser$.myRole])
                }
                else {
                    if [$loggedUser$.myRole = Role::MANAGER] {
                        open ManagerMenu_W(caller:[$loggedUser$], role:[$loggedUser$.myRole], locale:['fr-FR'])
                    }
                    else {
                        notification (['Message'],['You have no role assigned.'],[-1])
                    }
                }
            }
            else {
                notification (['Message'],['Wrong credentials.'],[-1])
            }
        }
    }
}