Window patientsWi{
    String text := ['Patients']
    MedicalCenter medicalCenter

    Label medicalCenterLa{
        String text := 
            ['Medical center: '.concat($patientsWi.medicalCenter$.name)]
    }
    Label patientsLa{
        String text := ['List of patients:']
    }
    Table patientsTa{
        Set(Patient) rows := 
            [$patientsWi.medicalCenter$.departments.patients->asSet()]
    }
    Button movePatientBu{
        String text := ['Move the selected patient']
    }
    Button backBu{
        String text := ['Back']
    }
}

Table patientsWi.patientsTa{
    columns {
        ['Name'] : Label name {
            event onView (text) {
                try {
                    text := [$patientsTa.row$.contact->any(true).name]
                }
                catch (SecurityException)
                {
                    text := ['---']
                }
            }
        }
        ['Surname'] : Label surname {
            event onView (text) {
                try {
                    text := [$patientsTa.row$.contact->any(true).surname]
                    }
                 catch (SecurityException)
                 {
                    text := ['---']
                 }
            }     
        }
        ['Gender'] : Label gender {
            event onView (text) {
                try {
                    text := [$patientsTa.row$.contact->any(true).gender]
                }
                catch (SecurityException)
                {
                    text := ['---']
                }
            }
        }
        ['Floor'] : Label floor {
            event onView (text) {
                try {
                    text := [$patientsTa.row$.allocation->any(true).floor]
                }
                catch (SecurityException)
                {
                    text := ['---']
                }
            }
        }
        ['Room'] : Label room {
            event onView (text) {
                try {
                    text := [$patientsTa.row$.allocation->any(true).room]
                }
                catch (SecurityException)
                {
                    text := ['---']
                }
            }
        }
        ['Social Info'] : Label socialInfo {
            event onView (text) {
                try {
                    text := [$patientsTa.row$.social->any(true).description]
                    }
                catch (SecurityException)
                    {
                    text := ['---']
                    }
                }
        }
    }
}

Button patientsWi.movePatientBu{
    event onClick{
        if [$patientsWi.caller$.asAdministrative->notEmpty()] {
            if [not $patientsTa.selected$->oclIsUndefined()] {
                if [$patientsTa.selected$->size() = 1] {
                    open movePatientWi(medicalCenter:[$patientsWi.medicalCenter$], patient: [$patientsTa.selected$->any(true)])
                }
                else {
                    notification(['Message'],['You have to select exactly one patient.'],[-1])
                }
            }
            else{
                notification(['Message'],['You have to select a patient.'],[-1])
            }
        }
        else{
            notification(['Message'],['You are not administrative of this medical center.'],[-1])
        }
    }
}

Button patientsWi.backBu{
    event onClick{
        back
    }
}

