Window SelectMealsWI  {
    Date selDate := [Date.now().truncate(TimeUnit::DAY)] 
    DayOfWeek selDateDayOfWeek := [$selDate$.dayOfWeek()] 
    Date selDateWeekFirstDay := [if $selDateDayOfWeek$=DayOfWeek::MONDAY then $selDate$.add(-1,TimeUnit::DAY) else (if $selDateDayOfWeek$=DayOfWeek::TUESDAY then $selDate$.add(-2,TimeUnit::DAY) else (if $selDateDayOfWeek$=DayOfWeek::WEDNESDAY then $selDate$.add(-3,TimeUnit::DAY) else (if $selDateDayOfWeek$=DayOfWeek::THURSDAY then $selDate$.add(-4,TimeUnit::DAY) else (if $selDateDayOfWeek$=DayOfWeek::FRIDAY then $selDate$.add(-5,TimeUnit::DAY) else (if $selDateDayOfWeek$=DayOfWeek::SATURDAY then $selDate$.add(-6,TimeUnit::DAY) else $selDate$.add(-7,TimeUnit::DAY) endif) endif) endif) endif) endif)endif]


    Button NextWeekBU {
        String text := ['Next'] 
        //[Date.now().dayOfWeek().toString()]
        event onClick {
              SelectMealsWI.selDate := [$SelectMealsWI.selDate$.add(7, TimeUnit::DAY)]
        }
    }

    Button PreviousWeekBU {
        String text := ['Previous']
        event onClick {
              SelectMealsWI.selDate := [$SelectMealsWI.selDate$.add(-7, TimeUnit::DAY)]
        }
    }

    Label firstDayThisWeekLB {
        String text := [$SelectMealsWI.selDateWeekFirstDay$.dayOfWeek().name().concat(' ').concat(($SelectMealsWI.selDateWeekFirstDay$.dayOfMonth()).toString())]
    } 
    Label secondDayThisWeekLB {
        String text := [$SelectMealsWI.selDateWeekFirstDay$.add(1,TimeUnit::DAY).dayOfWeek().name().concat(' ').concat(($SelectMealsWI.selDateWeekFirstDay$.add(1,TimeUnit::DAY).dayOfMonth()).toString())]
    } 
    Label thirdDayThisWeekLB {
        String text := [$SelectMealsWI.selDateWeekFirstDay$.add(2,TimeUnit::DAY).dayOfWeek().name().concat(' ').concat(($SelectMealsWI.selDateWeekFirstDay$.add(2,TimeUnit::DAY).dayOfMonth()).toString())]
    } 
    Label fourthDayThisWeekLB {
        String text := [$SelectMealsWI.selDateWeekFirstDay$.add(3,TimeUnit::DAY).dayOfWeek().name().concat(' ').concat(($SelectMealsWI.selDateWeekFirstDay$.add(3,TimeUnit::DAY).dayOfMonth()).toString())]
    } 
    Label fifthDayThisWeekLB {
        String text := [$SelectMealsWI.selDateWeekFirstDay$.add(4,TimeUnit::DAY).dayOfWeek().name().concat(' ').concat(($SelectMealsWI.selDateWeekFirstDay$.add(4,TimeUnit::DAY).dayOfMonth()).toString())]
    } 
    Label sixthDayThisWeekLB {
        String text := [$SelectMealsWI.selDateWeekFirstDay$.add(5,TimeUnit::DAY).dayOfWeek().name().concat(' ').concat(($SelectMealsWI.selDateWeekFirstDay$.add(5,TimeUnit::DAY).dayOfMonth()).toString())]
    } 
    Label seventhDayThisWeekLB {
        String text := [$SelectMealsWI.selDateWeekFirstDay$.add(6,TimeUnit::DAY).dayOfWeek().name().concat(' ').concat(($SelectMealsWI.selDateWeekFirstDay$.add(6,TimeUnit::DAY).dayOfMonth()).toString())]
    } 
    



    Table WeekMealsTB {
        Set(Meal) rows := [Meal.allInstances()]
        Set(Meal) selected := [null]
        columns {
        ['First'] : ComboBox FirstCB {
                            Date thisDate := [$SelectMealsWI.selDateWeekFirstDay$]
                            Set(MealOption) rows := [$WeekMealsTB.row$.options]
                            MealOption selected

                            Label Literal {
                                String text := [$FirstCB.row$.literal]
                                }
                            
                            event onView (selected) {
                                    try {
                                    selected := [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$).mealOption]
                                    }
                                    catch (Exception) { }
                                    }

                            event onChange (selected) {
                                try {
                                if [$selected$.oclIsUndefined()=false] 
                                {   
                                    if [not($SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).oclIsUndefined())]
                                    {
                                        if [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$).oclIsUndefined()]
                                        {
                                        newMealSelection := new MealSelection
                                        [$newMealSelection$.ownedBy] := [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY))]
                                        [$newMealSelection$.meal] := [$WeekMealsTB.row$]
                                        [$newMealSelection$.mealOption] := [$selected$]
                                        }
                                        else {
                                            if [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$).mealOption <> $selected$]
                                             { [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$).mealOption] := [$selected$] }
                                        }
                                    }
                                    else {
                                        newDailyMealSelection := new DailyMealSelection
                                        [$newDailyMealSelection$.date] := [$thisDate$.truncate(TimeUnit::DAY)]
                                        [$SelectMealsWI.caller$.dailyMeals] += [$newDailyMealSelection$]
                                        newMealSelection := new MealSelection
                                        [$newMealSelection$.meal] := [$WeekMealsTB.row$]
                                        [$newDailyMealSelection$.selections] += [$newMealSelection$]
                                        [$newMealSelection$.mealOption] := [$selected$]

                                 }
                                 }
                                else {
                                    if [not(MealOption.allInstances()->any(o|o = $SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$).mealOption).oclIsUndefined())]
                                        {   delete [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$)]
                                            //[$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections] -= [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$)] 
                                            }
                                 }
                           } 
                          catch (SecurityException) { 
                                    reevaluate selected
                                    notification(['MESSAGE'], ['UNAUTHORIZED'], [-1]) 
                                    }
                           catch (Exception) { 
                                    reevaluate selected
                                    notification(['MESSAGE'], ['EXCEPTION'], [-1]) }                        
                           }
                    }
        ['Second'] : ComboBox SecondCB {
                            Date thisDate := [$SelectMealsWI.selDateWeekFirstDay$.add(1,TimeUnit::DAY)]
                            Set(MealOption) rows := [$WeekMealsTB.row$.options]
                            MealOption selected

                            Label Literal {
                                String text := [$SecondCB.row$.literal]
                                }
                            
                            event onView (selected) {
                                    try {
                                    selected := [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$).mealOption]
                                    }
                                    catch (Exception) { }
                                    }

                            event onChange (selected) {
                                try {
                                if [$selected$.oclIsUndefined()=false] 
                                {   
                                    if [not($SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).oclIsUndefined())]
                                    {
                                        if [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$).oclIsUndefined()]
                                        {
                                        newMealSelection := new MealSelection
                                        [$newMealSelection$.ownedBy] := [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY))]
                                        [$newMealSelection$.meal] := [$WeekMealsTB.row$]
                                        [$newMealSelection$.mealOption] := [$selected$]
                                        }
                                        else {
                                            if [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$).mealOption <> $selected$]
                                             { [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$).mealOption] := [$selected$] }
                                        }
                                    }
                                    else {
                                        newDailyMealSelection := new DailyMealSelection
                                        [$newDailyMealSelection$.date] := [$thisDate$.truncate(TimeUnit::DAY)]
                                        [$SelectMealsWI.caller$.dailyMeals] += [$newDailyMealSelection$]
                                        newMealSelection := new MealSelection
                                        [$newMealSelection$.meal] := [$WeekMealsTB.row$]
                                        [$newDailyMealSelection$.selections] += [$newMealSelection$]
                                        [$newMealSelection$.mealOption] := [$selected$]

                                 }
                                 }
                                else {
                                    if [not(MealOption.allInstances()->any(o|o = $SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$).mealOption).oclIsUndefined())]
                                        {   delete [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$)]
                                            //[$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections] -= [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$)] 
                                            }
                                 }
                           } 
                          catch (SecurityException) { 
                                    reevaluate selected
                                    notification(['MESSAGE'], ['UNAUTHORIZED'], [-1]) 
                                    }
                           catch (Exception) { 
                                    reevaluate selected
                                    notification(['MESSAGE'], ['EXCEPTION'], [-1]) }                        
                           }
                    }
                     
                    
         ['Third'] : ComboBox ThirdCB {
                            Date thisDate := [$SelectMealsWI.selDateWeekFirstDay$.add(2,TimeUnit::DAY)]
                            Set(MealOption) rows := [$WeekMealsTB.row$.options]
                            MealOption selected

                            Label Literal {
                                String text := [$ThirdCB.row$.literal]
                                }
                            
                            event onView (selected) {
                                    try {
                                    selected := [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$).mealOption]
                                    }
                                    catch (Exception) { }
                                    }

                            event onChange (selected) {
                                try {
                                if [$selected$.oclIsUndefined()=false] 
                                {   
                                    if [not($SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).oclIsUndefined())]
                                    {
                                        if [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$).oclIsUndefined()]
                                        {
                                        newMealSelection := new MealSelection
                                        [$newMealSelection$.ownedBy] := [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY))]
                                        [$newMealSelection$.meal] := [$WeekMealsTB.row$]
                                        [$newMealSelection$.mealOption] := [$selected$]
                                        }
                                        else {
                                            if [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$).mealOption <> $selected$]
                                             { [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$).mealOption] := [$selected$] }
                                        }
                                    }
                                    else {
                                        newDailyMealSelection := new DailyMealSelection
                                        [$newDailyMealSelection$.date] := [$thisDate$.truncate(TimeUnit::DAY)]
                                        [$SelectMealsWI.caller$.dailyMeals] += [$newDailyMealSelection$]
                                        newMealSelection := new MealSelection
                                        [$newMealSelection$.meal] := [$WeekMealsTB.row$]
                                        [$newDailyMealSelection$.selections] += [$newMealSelection$]
                                        [$newMealSelection$.mealOption] := [$selected$]

                                 }
                                 }
                                else {
                                    if [not(MealOption.allInstances()->any(o|o = $SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$).mealOption).oclIsUndefined())]
                                        {   delete [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$)]
                                            //[$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections] -= [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$)] 
                                            }
                                 }
                           } 
                          catch (SecurityException) { 
                                    reevaluate selected
                                    notification(['MESSAGE'], ['UNAUTHORIZED'], [-1]) 
                                    }
                           catch (Exception) { 
                                    reevaluate selected
                                    notification(['MESSAGE'], ['EXCEPTION'], [-1]) }                        
                           }
                    }
                        
         ['Fourth'] : ComboBox FourthCB {
                            Date thisDate := [$SelectMealsWI.selDateWeekFirstDay$.add(3,TimeUnit::DAY)]
                            Set(MealOption) rows := [$WeekMealsTB.row$.options]
                            MealOption selected

                            Label Literal {
                                String text := [$FourthCB.row$.literal]
                                }
                            
                            event onView (selected) {
                                    try {
                                    selected := [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$).mealOption]
                                    }
                                    catch (Exception) { }
                                    }

                            event onChange (selected) {
                                try {
                                if [$selected$.oclIsUndefined()=false] 
                                {   
                                    if [not($SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).oclIsUndefined())]
                                    {
                                        if [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$).oclIsUndefined()]
                                        {
                                        newMealSelection := new MealSelection
                                        [$newMealSelection$.ownedBy] := [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY))]
                                        [$newMealSelection$.meal] := [$WeekMealsTB.row$]
                                        [$newMealSelection$.mealOption] := [$selected$]
                                        }
                                        else {
                                            if [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$).mealOption <> $selected$]
                                             { [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$).mealOption] := [$selected$] }
                                        }
                                    }
                                    else {
                                        newDailyMealSelection := new DailyMealSelection
                                        [$newDailyMealSelection$.date] := [$thisDate$.truncate(TimeUnit::DAY)]
                                        [$SelectMealsWI.caller$.dailyMeals] += [$newDailyMealSelection$]
                                        newMealSelection := new MealSelection
                                        [$newMealSelection$.meal] := [$WeekMealsTB.row$]
                                        [$newDailyMealSelection$.selections] += [$newMealSelection$]
                                        [$newMealSelection$.mealOption] := [$selected$]

                                 }
                                 }
                                else {
                                    if [not(MealOption.allInstances()->any(o|o = $SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$).mealOption).oclIsUndefined())]
                                        {   delete [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$)]
                                            //[$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections] -= [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$)] 
                                            }
                                 }
                           } 
                          catch (SecurityException) { 
                                    reevaluate selected
                                    notification(['MESSAGE'], ['UNAUTHORIZED'], [-1]) 
                                    }
                           catch (Exception) { 
                                    reevaluate selected
                                    notification(['MESSAGE'], ['EXCEPTION'], [-1]) }                        
                           }
                    }
                    
         ['Fifth'] : ComboBox FifthCB {
                        Date thisDate := [$SelectMealsWI.selDateWeekFirstDay$.add(4,TimeUnit::DAY)]
                        Set(MealOption) rows := [$WeekMealsTB.row$.options]
                            MealOption selected

                            Label Literal {
                                String text := [$FifthCB.row$.literal]
                                }
                            
                            event onView (selected) {
                                    try {
                                    selected := [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$).mealOption]
                                    }
                                    catch (Exception) { }
                                    }

                            event onChange (selected) {
                                try {
                                if [$selected$.oclIsUndefined()=false] 
                                {   
                                    if [not($SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).oclIsUndefined())]
                                    {
                                        if [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$).oclIsUndefined()]
                                        {
                                        newMealSelection := new MealSelection
                                        [$newMealSelection$.ownedBy] := [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY))]
                                        [$newMealSelection$.meal] := [$WeekMealsTB.row$]
                                        [$newMealSelection$.mealOption] := [$selected$]
                                        }
                                        else {
                                            if [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$).mealOption <> $selected$]
                                             { [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$).mealOption] := [$selected$] }
                                        }
                                    }
                                    else {
                                        newDailyMealSelection := new DailyMealSelection
                                        [$newDailyMealSelection$.date] := [$thisDate$.truncate(TimeUnit::DAY)]
                                        [$SelectMealsWI.caller$.dailyMeals] += [$newDailyMealSelection$]
                                        newMealSelection := new MealSelection
                                        [$newMealSelection$.meal] := [$WeekMealsTB.row$]
                                        [$newDailyMealSelection$.selections] += [$newMealSelection$]
                                        [$newMealSelection$.mealOption] := [$selected$]

                                 }
                                 }
                                else {
                                    if [not(MealOption.allInstances()->any(o|o = $SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$).mealOption).oclIsUndefined())]
                                        {   delete [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$)]
                                            //[$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections] -= [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$)] 
                                            }
                                 }
                           } 
                          catch (SecurityException) { 
                                    reevaluate selected
                                    notification(['MESSAGE'], ['UNAUTHORIZED'], [-1]) 
                                    }
                           catch (Exception) { 
                                    reevaluate selected
                                    notification(['MESSAGE'], ['EXCEPTION'], [-1]) }                        
                           }
                    }
                    
          ['Sixth'] : ComboBox SixthCB {
                            Date thisDate := [$SelectMealsWI.selDateWeekFirstDay$.add(5,TimeUnit::DAY)]
                            Set(MealOption) rows := [$WeekMealsTB.row$.options]
                            MealOption selected

                            Label Literal {
                                String text := [$SixthCB.row$.literal]
                                }
                            
                            event onView (selected) {
                                    try {
                                    selected := [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$).mealOption]
                                    }
                                    catch (Exception) { }
                                    }

                            event onChange (selected) {
                                try {
                                if [$selected$.oclIsUndefined()=false] 
                                {   
                                    if [not($SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).oclIsUndefined())]
                                    {
                                        if [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$).oclIsUndefined()]
                                        {
                                        newMealSelection := new MealSelection
                                        [$newMealSelection$.ownedBy] := [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY))]
                                        [$newMealSelection$.meal] := [$WeekMealsTB.row$]
                                        [$newMealSelection$.mealOption] := [$selected$]
                                        }
                                        else {
                                            if [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$).mealOption <> $selected$]
                                             { [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$).mealOption] := [$selected$] }
                                        }
                                    }
                                    else {
                                        newDailyMealSelection := new DailyMealSelection
                                        [$newDailyMealSelection$.date] := [$thisDate$.truncate(TimeUnit::DAY)]
                                        [$SelectMealsWI.caller$.dailyMeals] += [$newDailyMealSelection$]
                                        newMealSelection := new MealSelection
                                        [$newMealSelection$.meal] := [$WeekMealsTB.row$]
                                        [$newDailyMealSelection$.selections] += [$newMealSelection$]
                                        [$newMealSelection$.mealOption] := [$selected$]

                                 }
                                 }
                                else {
                                    if [not(MealOption.allInstances()->any(o|o = $SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$).mealOption).oclIsUndefined())]
                                        {   delete [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$)]
                                            //[$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections] -= [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$)] 
                                            }
                                 }
                           } 
                          catch (SecurityException) { 
                                    reevaluate selected
                                    notification(['MESSAGE'], ['UNAUTHORIZED'], [-1]) 
                                    }
                           catch (Exception) { 
                                    reevaluate selected
                                    notification(['MESSAGE'], ['EXCEPTION'], [-1]) }                        
                           }
                    }
                 
          ['Seventh'] : ComboBox SeventhCB {
                            Date thisDate := [$SelectMealsWI.selDateWeekFirstDay$.add(6,TimeUnit::DAY)]
                            Set(MealOption) rows := [$WeekMealsTB.row$.options]
                            MealOption selected

                            Label Literal {
                                String text := [$SeventhCB.row$.literal]
                                }
                            
                            event onView (selected) {
                                    try {
                                    selected := [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$).mealOption]
                                    }
                                    catch (Exception) { }
                                    }

                            event onChange (selected) {
                                try {
                                if [$selected$.oclIsUndefined()=false] 
                                {   
                                    if [not($SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).oclIsUndefined())]
                                    {
                                        if [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$).oclIsUndefined()]
                                        {
                                        newMealSelection := new MealSelection
                                        [$newMealSelection$.ownedBy] := [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY))]
                                        [$newMealSelection$.meal] := [$WeekMealsTB.row$]
                                        [$newMealSelection$.mealOption] := [$selected$]
                                        }
                                        else {
                                            if [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$).mealOption <> $selected$]
                                             { [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$).mealOption] := [$selected$] }
                                        }
                                    }
                                    else {
                                        newDailyMealSelection := new DailyMealSelection
                                        [$newDailyMealSelection$.date] := [$thisDate$.truncate(TimeUnit::DAY)]
                                        [$SelectMealsWI.caller$.dailyMeals] += [$newDailyMealSelection$]
                                        newMealSelection := new MealSelection
                                        [$newMealSelection$.meal] := [$WeekMealsTB.row$]
                                        [$newDailyMealSelection$.selections] += [$newMealSelection$]
                                        [$newMealSelection$.mealOption] := [$selected$]

                                 }
                                 }
                                else {
                                    if [not(MealOption.allInstances()->any(o|o = $SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$).mealOption).oclIsUndefined())]
                                        {   delete [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$)]
                                            //[$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections] -= [$SelectMealsWI.caller$.dailyMeals->any(d|d.date.truncate(TimeUnit::DAY)=$thisDate$.truncate(TimeUnit::DAY)).selections->any(s|s.meal = $WeekMealsTB.row$)] 
                                            }
                                 }
                           } 
                          catch (SecurityException) { 
                                    reevaluate selected
                                    notification(['MESSAGE'], ['UNAUTHORIZED'], [-1]) 
                                    }
                           catch (Exception) { 
                                    reevaluate selected
                                    notification(['MESSAGE'], ['EXCEPTION'], [-1]) }                        
                           }
                    } 


         }

    }
    // QUESTION: how many times is redrawn the table when the window is created?
    // QUESTION: can we have a "refresh" actions?
     event onChange (selDate) {     
        reevaluate selDateDayOfWeek
        reevaluate selDateWeekFirstDay
        reevaluate firstDayThisWeekLB.text
        reevaluate secondDayThisWeekLB.text
        reevaluate thirdDayThisWeekLB.text
        reevaluate fourthDayThisWeekLB.text
        reevaluate fifthDayThisWeekLB.text        
        reevaluate sixthDayThisWeekLB.text
        reevaluate seventhDayThisWeekLB.text

        WeekMealsTB.rows := [Meal.allInstances()->select(m|false)]
        WeekMealsTB.rows := [Meal.allInstances()]
    }
}

            