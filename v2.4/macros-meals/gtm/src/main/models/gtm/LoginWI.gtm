Window LoginWI isMain {
    String text := ['User authentication']

Label residenceLA {
    String text := ['Residence']
}
ComboBox residenceCB {
    Set(Residence) rows := [Residence.allInstances()]

    Label residence {
        String text := [$residenceCB.row$.name]
    }
}

Label LoginFO_login_L {
    String text := ['Login: ']
}
TextField LoginFO_login {
    String text := [null]    
    String error := [null]
}

Label LoginFO_password_L {
    String text := ['Password: ']
}
PasswordField LoginFO_password {
    String text := [null]    
    String error := [null]
}



Button LoginBU {
    String text := ['Login']
    User loggedUser
    event onClick {
        if [$residenceCB.selected$.oclIsUndefined()] {
            notification (['Message'],['Please, select a residence.'],[2000])  
        }
        else {
            try {
                loggedUser := [User.allInstances()->any(e|e.login = $LoginFO_login.text$ and e.password = $LoginFO_password.text$)]
            }
            catch(SecurityException) {
                notification(['Security error'],['You do not have permission to read the login credentials'],[2000])
            }
            catch(ModelException) {
                notification(['Model error'],['There was an error reading the login credentials'],[2000])
            }
            catch(Exception) {
                notification(['Unknown error'],['There was an unexpected error'],[2000])
            }

            if [not($loggedUser$.oclIsUndefined())] {
                if [$loggedUser$.role = Role::RESIDENT] {
                    open SelectMealsWI(caller:[$loggedUser$], role:[$loggedUser$.role], residence:[$residenceCB.selected$])
                }
                else {
                    if [$loggedUser$.role = Role::DIRECTOR] {
                        open MenuDirectorWI(caller:[$loggedUser$], role:[$loggedUser$.role], residence:[$residenceCB.selected$])
                    }
                    else {
                        if [$loggedUser$.role = Role::ADMINISTRATION] {
                            open CountMealsAdminWI(caller:[$loggedUser$], role:[$loggedUser$.role], residence:[$residenceCB.selected$])
                        }
                        else {
                            notification (['Message'],['You have no role assigned.'],[2000])
                        }
                    }
                } 
            }
            else {
                notification (['Wrong credentials'],['Please, write a valid login and password.'],[2000])  
            }
        }
    }
}

}
