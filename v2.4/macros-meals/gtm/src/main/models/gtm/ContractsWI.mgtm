Window ContractsWI {
    String text := ['Contracts']
    Residence residence
    String locale := [$residence$.lang]

Label logoIMG {
}

     #table ContractsTB {
        entity: Contract
        rows : [$ContractsWI.residence$.contracts]
        column : name {label : ['Name'] }
        selection: SINGLE
    }#

    #form NewContractFO {
        entity: Contract
        prop: name {label : ['Contract: ']}
    }#

Button NewContractBU {
        String text := locate(Create)
        Contract newContract
        event onClick {
            #create {
                form: NewContractFO
                result: newContract
                assert: [not($NewContractFO_name.text$.oclIsUndefined()) and $NewContractFO_name.text$ <> ''] {
                    message: ['Please, write the name of the new contract']
                    assert : [not($ContractsWI.residence$.contracts->exists(r|r.name = $NewContractFO_name.text$))] {
                        message: ['There is already a contract with this name. Please, choose a different name']
                    }
                }     
            }#
            if [not($newContract$.oclIsUndefined())] {
                [$newContract$.residence] := [$ContractsWI.residence$]
                #refresh  ContractsTB#              
                ContractsTB.selected := [$newContract$]
            }
        }

    }

Button EditBU {
    String text := locate(Edit)
    event onClick {
        #forward {
            target: EditContractWI
            arg: thisContract {
                value: [$ContractsTB.selected$]
            }
            arg: residence {
                value: [$ContractsWI.residence$]
            }
            assert: [not($ContractsTB.selected$.oclIsUndefined())] {
                message: ['Please, select first a contract']
            } 
        }#
    }
}


Button BackBU {
    String text := locate(Back)
    event onClick {
        back
    }
}

}